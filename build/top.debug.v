/* Automatically generated by nMigen 0.3.dev182+g47ecc16. Do not edit. */
/* Generated by Yosys 0.9+3521 (git sha1 12132b68, gcc 10.2.0 -march=x86-64 -mtune=generic -O2 -fno-plt -fPIC -Os) */

(* \nmigen.hierarchy  = "top.cd_sync" *)
(* generator = "nMigen" *)
module cd_sync(clk, clk50_0__i, rst);
  reg \initial  = 0;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/plat.py:121" *)
  output clk;
  reg clk;
  (* keep = "true" *)
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input clk50_0__i;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/plat.py:121" *)
  output rst;
  reset_sync reset_sync (
    .clk(clk),
    .rst(rst)
  );
  always @* begin
    if (\initial ) begin end
    clk = 1'h0;
    clk = clk50_0__i;
  end
endmodule

(* \nmigen.hierarchy  = "top.pin_clk50_0" *)
(* generator = "nMigen" *)
module pin_clk50_0(clk50_0__io, clk50_0__i);
  (* keep = "true" *)
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  output clk50_0__i;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input clk50_0__io;
  altiobuf_in #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE")
  ) clk50_0 (
    .datain(clk50_0__io),
    .dataout(clk50_0__i)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_led_0" *)
(* generator = "nMigen" *)
module pin_led_0(led_0__io, led_0__o);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_0__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input led_0__o;
  altiobuf_out #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE"),
    .use_oe("FALSE")
  ) led_0 (
    .datain(led_0__o),
    .dataout(led_0__io)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_led_1" *)
(* generator = "nMigen" *)
module pin_led_1(led_1__io, led_1__o);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_1__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input led_1__o;
  altiobuf_out #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE"),
    .use_oe("FALSE")
  ) led_1 (
    .datain(led_1__o),
    .dataout(led_1__io)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_led_2" *)
(* generator = "nMigen" *)
module pin_led_2(led_2__io, led_2__o);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_2__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input led_2__o;
  altiobuf_out #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE"),
    .use_oe("FALSE")
  ) led_2 (
    .datain(led_2__o),
    .dataout(led_2__io)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_led_3" *)
(* generator = "nMigen" *)
module pin_led_3(led_3__io, led_3__o);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_3__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input led_3__o;
  altiobuf_out #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE"),
    .use_oe("FALSE")
  ) led_3 (
    .datain(led_3__o),
    .dataout(led_3__io)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_led_4" *)
(* generator = "nMigen" *)
module pin_led_4(led_4__io, led_4__o);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_4__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input led_4__o;
  altiobuf_out #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE"),
    .use_oe("FALSE")
  ) led_4 (
    .datain(led_4__o),
    .dataout(led_4__io)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_led_5" *)
(* generator = "nMigen" *)
module pin_led_5(led_5__io, led_5__o);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_5__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input led_5__o;
  altiobuf_out #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE"),
    .use_oe("FALSE")
  ) led_5 (
    .datain(led_5__o),
    .dataout(led_5__io)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_led_6" *)
(* generator = "nMigen" *)
module pin_led_6(led_6__io, led_6__o);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_6__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input led_6__o;
  altiobuf_out #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE"),
    .use_oe("FALSE")
  ) led_6 (
    .datain(led_6__o),
    .dataout(led_6__io)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_led_7" *)
(* generator = "nMigen" *)
module pin_led_7(led_7__io, led_7__o);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_7__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  input led_7__o;
  altiobuf_out #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE"),
    .use_oe("FALSE")
  ) led_7 (
    .datain(led_7__o),
    .dataout(led_7__io)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_switch_0" *)
(* generator = "nMigen" *)
module pin_switch_0(switch_0__io, switch_0__i);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  output switch_0__i;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input switch_0__io;
  altiobuf_in #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE")
  ) switch_0 (
    .datain(switch_0__io),
    .dataout(switch_0__i)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_switch_1" *)
(* generator = "nMigen" *)
module pin_switch_1(switch_1__io);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  wire switch_1__i;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input switch_1__io;
  altiobuf_in #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE")
  ) switch_1 (
    .datain(switch_1__io),
    .dataout(switch_1__i)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_switch_2" *)
(* generator = "nMigen" *)
module pin_switch_2(switch_2__io);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  wire switch_2__i;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input switch_2__io;
  altiobuf_in #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE")
  ) switch_2 (
    .datain(switch_2__io),
    .dataout(switch_2__i)
  );
endmodule

(* \nmigen.hierarchy  = "top.pin_switch_3" *)
(* generator = "nMigen" *)
module pin_switch_3(switch_3__io);
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  wire switch_3__i;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input switch_3__io;
  altiobuf_in #(
    .enable_bus_hold("FALSE"),
    .number_of_channels(32'd1),
    .use_differential_mode("FALSE")
  ) switch_3 (
    .datain(switch_3__io),
    .dataout(switch_3__i)
  );
endmodule

(* \nmigen.hierarchy  = "top.cd_sync.reset_sync" *)
(* generator = "nMigen" *)
module reset_sync(clk, rst);
  reg \initial  = 0;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/vendor/intel.py:406" *)
  wire \$1 ;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/vendor/intel.py:418" *)
  wire \$3 ;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/plat.py:121" *)
  input clk;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/plat.py:121" *)
  output rst;
  reg rst;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/vendor/intel.py:401" *)
  wire sync_output;
  assign \$1  = ~ (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/vendor/intel.py:406" *) 1'h0;
  assign \$3  = ~ (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/vendor/intel.py:418" *) sync_output;
  altera_std_synchronizer #(
    .depth(32'd2)
  ) \U$$0  (
    .clk(clk),
    .din(1'h1),
    .dout(sync_output),
    .reset_n(\$1 )
  );
  always @* begin
    if (\initial ) begin end
    rst = 1'h0;
    rst = \$3 ;
  end
endmodule

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(led_1__io, led_2__io, led_3__io, led_4__io, led_5__io, led_6__io, led_7__io, switch_0__io, switch_1__io, switch_2__io, switch_3__io, clk50_0__io, led_0__io);
  reg \initial  = 0;
  (* src = "blinky.py:28" *)
  wire [32:0] \$1 ;
  (* src = "blinky.py:35" *)
  wire \$10 ;
  (* src = "blinky.py:32" *)
  wire \$12 ;
  (* src = "blinky.py:35" *)
  wire \$14 ;
  (* src = "blinky.py:32" *)
  wire \$16 ;
  (* src = "blinky.py:35" *)
  wire \$18 ;
  (* src = "blinky.py:28" *)
  wire [32:0] \$2 ;
  (* src = "blinky.py:32" *)
  wire \$20 ;
  (* src = "blinky.py:35" *)
  wire \$22 ;
  (* src = "blinky.py:32" *)
  wire \$24 ;
  (* src = "blinky.py:35" *)
  wire \$26 ;
  (* src = "blinky.py:32" *)
  wire \$28 ;
  (* src = "blinky.py:35" *)
  wire \$30 ;
  (* src = "blinky.py:32" *)
  wire \$32 ;
  (* src = "blinky.py:35" *)
  wire \$34 ;
  (* src = "blinky.py:32" *)
  wire \$4 ;
  (* src = "blinky.py:35" *)
  wire \$6 ;
  (* src = "blinky.py:32" *)
  wire \$8 ;
  (* keep = "true" *)
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  wire cd_sync_clk50_0__i;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/plat.py:121" *)
  wire clk;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input clk50_0__io;
  (* src = "blinky.py:26" *)
  reg [31:0] counter = 32'd0;
  (* src = "blinky.py:26" *)
  reg [31:0] \counter$next ;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_0__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_1__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_2__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_3__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_4__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_5__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_6__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  output led_7__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  reg pin_led_0_led_0__o;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  reg pin_led_1_led_1__o;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  reg pin_led_2_led_2__o;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  reg pin_led_3_led_3__o;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  reg pin_led_4_led_4__o;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  reg pin_led_5_led_5__o;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  reg pin_led_6_led_6__o;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  reg pin_led_7_led_7__o;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:143" *)
  wire pin_switch_0_switch_0__i;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/plat.py:121" *)
  wire rst;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input switch_0__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input switch_1__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input switch_2__io;
  (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/build/res.py:129" *)
  input switch_3__io;
  assign \$10  = pin_switch_0_switch_0__i == (* src = "blinky.py:35" *) 1'h0;
  assign \$12  = pin_switch_0_switch_0__i == (* src = "blinky.py:32" *) 1'h1;
  assign \$14  = pin_switch_0_switch_0__i == (* src = "blinky.py:35" *) 1'h0;
  assign \$16  = pin_switch_0_switch_0__i == (* src = "blinky.py:32" *) 1'h1;
  assign \$18  = pin_switch_0_switch_0__i == (* src = "blinky.py:35" *) 1'h0;
  assign \$20  = pin_switch_0_switch_0__i == (* src = "blinky.py:32" *) 1'h1;
  assign \$22  = pin_switch_0_switch_0__i == (* src = "blinky.py:35" *) 1'h0;
  assign \$24  = pin_switch_0_switch_0__i == (* src = "blinky.py:32" *) 1'h1;
  assign \$26  = pin_switch_0_switch_0__i == (* src = "blinky.py:35" *) 1'h0;
  assign \$28  = pin_switch_0_switch_0__i == (* src = "blinky.py:32" *) 1'h1;
  assign \$2  = counter + (* src = "blinky.py:28" *) 1'h1;
  assign \$30  = pin_switch_0_switch_0__i == (* src = "blinky.py:35" *) 1'h0;
  assign \$32  = pin_switch_0_switch_0__i == (* src = "blinky.py:32" *) 1'h1;
  assign \$34  = pin_switch_0_switch_0__i == (* src = "blinky.py:35" *) 1'h0;
  assign \$4  = pin_switch_0_switch_0__i == (* src = "blinky.py:32" *) 1'h1;
  assign \$6  = pin_switch_0_switch_0__i == (* src = "blinky.py:35" *) 1'h0;
  assign \$8  = pin_switch_0_switch_0__i == (* src = "blinky.py:32" *) 1'h1;
  always @(posedge clk)
    counter <= \counter$next ;
  cd_sync cd_sync (
    .clk(clk),
    .clk50_0__i(cd_sync_clk50_0__i),
    .rst(rst)
  );
  pin_clk50_0 pin_clk50_0 (
    .clk50_0__i(cd_sync_clk50_0__i),
    .clk50_0__io(clk50_0__io)
  );
  pin_led_0 pin_led_0 (
    .led_0__io(led_0__io),
    .led_0__o(pin_led_0_led_0__o)
  );
  pin_led_1 pin_led_1 (
    .led_1__io(led_1__io),
    .led_1__o(pin_led_1_led_1__o)
  );
  pin_led_2 pin_led_2 (
    .led_2__io(led_2__io),
    .led_2__o(pin_led_2_led_2__o)
  );
  pin_led_3 pin_led_3 (
    .led_3__io(led_3__io),
    .led_3__o(pin_led_3_led_3__o)
  );
  pin_led_4 pin_led_4 (
    .led_4__io(led_4__io),
    .led_4__o(pin_led_4_led_4__o)
  );
  pin_led_5 pin_led_5 (
    .led_5__io(led_5__io),
    .led_5__o(pin_led_5_led_5__o)
  );
  pin_led_6 pin_led_6 (
    .led_6__io(led_6__io),
    .led_6__o(pin_led_6_led_6__o)
  );
  pin_led_7 pin_led_7 (
    .led_7__io(led_7__io),
    .led_7__o(pin_led_7_led_7__o)
  );
  pin_switch_0 pin_switch_0 (
    .switch_0__i(pin_switch_0_switch_0__i),
    .switch_0__io(switch_0__io)
  );
  pin_switch_1 pin_switch_1 (
    .switch_1__io(switch_1__io)
  );
  pin_switch_2 pin_switch_2 (
    .switch_2__io(switch_2__io)
  );
  pin_switch_3 pin_switch_3 (
    .switch_3__io(switch_3__io)
  );
  always @* begin
    if (\initial ) begin end
    \counter$next  = counter;
    \counter$next  = \$1 [31:0];
    (* src = "/home/ben/.newnv/lib/python3.8/site-packages/nmigen/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \counter$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    pin_led_0_led_0__o = 1'h0;
    (* src = "blinky.py:32" *)
    casez (\$4 )
      /* src = "blinky.py:32" */
      1'h1:
          pin_led_0_led_0__o = counter[24];
    endcase
    (* src = "blinky.py:35" *)
    casez (\$6 )
      /* src = "blinky.py:35" */
      1'h1:
          pin_led_0_led_0__o = 1'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    pin_led_1_led_1__o = 1'h0;
    (* src = "blinky.py:32" *)
    casez (\$8 )
      /* src = "blinky.py:32" */
      1'h1:
          pin_led_1_led_1__o = counter[25];
    endcase
    (* src = "blinky.py:35" *)
    casez (\$10 )
      /* src = "blinky.py:35" */
      1'h1:
          pin_led_1_led_1__o = 1'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    pin_led_2_led_2__o = 1'h0;
    (* src = "blinky.py:32" *)
    casez (\$12 )
      /* src = "blinky.py:32" */
      1'h1:
          pin_led_2_led_2__o = counter[26];
    endcase
    (* src = "blinky.py:35" *)
    casez (\$14 )
      /* src = "blinky.py:35" */
      1'h1:
          pin_led_2_led_2__o = 1'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    pin_led_3_led_3__o = 1'h0;
    (* src = "blinky.py:32" *)
    casez (\$16 )
      /* src = "blinky.py:32" */
      1'h1:
          pin_led_3_led_3__o = counter[27];
    endcase
    (* src = "blinky.py:35" *)
    casez (\$18 )
      /* src = "blinky.py:35" */
      1'h1:
          pin_led_3_led_3__o = 1'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    pin_led_4_led_4__o = 1'h0;
    (* src = "blinky.py:32" *)
    casez (\$20 )
      /* src = "blinky.py:32" */
      1'h1:
          pin_led_4_led_4__o = counter[28];
    endcase
    (* src = "blinky.py:35" *)
    casez (\$22 )
      /* src = "blinky.py:35" */
      1'h1:
          pin_led_4_led_4__o = 1'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    pin_led_5_led_5__o = 1'h0;
    (* src = "blinky.py:32" *)
    casez (\$24 )
      /* src = "blinky.py:32" */
      1'h1:
          pin_led_5_led_5__o = counter[29];
    endcase
    (* src = "blinky.py:35" *)
    casez (\$26 )
      /* src = "blinky.py:35" */
      1'h1:
          pin_led_5_led_5__o = 1'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    pin_led_6_led_6__o = 1'h0;
    (* src = "blinky.py:32" *)
    casez (\$28 )
      /* src = "blinky.py:32" */
      1'h1:
          pin_led_6_led_6__o = counter[30];
    endcase
    (* src = "blinky.py:35" *)
    casez (\$30 )
      /* src = "blinky.py:35" */
      1'h1:
          pin_led_6_led_6__o = 1'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    pin_led_7_led_7__o = 1'h0;
    (* src = "blinky.py:32" *)
    casez (\$32 )
      /* src = "blinky.py:32" */
      1'h1:
          pin_led_7_led_7__o = counter[31];
    endcase
    (* src = "blinky.py:35" *)
    casez (\$34 )
      /* src = "blinky.py:35" */
      1'h1:
          pin_led_7_led_7__o = 1'h0;
    endcase
  end
  assign \$1  = \$2 ;
endmodule
